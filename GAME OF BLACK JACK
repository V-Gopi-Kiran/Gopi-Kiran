#WRITE A PROGRAM TO PAY BLACKJACK / 21

import random

#create a list and function for ascii art card to improve GUI
cards_gui = [''' ''','''
 --------------
|A               |
|                  |
|                  |
|                  |
|                A|
 -------------- ''','''
 --------------
|2               |
|                 |
|                 |
|                 |
|               2|
 -------------- ''' , '''
 --------------
|3               |
|                 |
|                 |
|                 |
|               3|
 -------------- ''', '''
 --------------
|4               |
|                 |
|                 |
|                 |
|               4|
 -------------- ''','''
 --------------
|5                |
|                  |
|                  |
|                  |
|                5|
 --------------''', '''
 --------------
|6                |
|                  |
|                  |
|                  |
|                6|
 -------------- ''',  '''
 --------------
|7                |
|                  |
|                  |
|                  |
|               7|
 -------------- ''', '''
 --------------
|8                |
|                  |
|                  |
|                  |
|               8|
 --------------''', '''
 --------------
|9                |
|                  |
|                  |
|                  |
|               9|
 -------------- ''', '''
 --------------
|10             |
|                  |
|                  |
|                  |
|             10|
 -------------- ''',''' 
 --------------
|J                |
|                 |
|                 |
|                 |
|               J|
 ------------- ''','''
 --------------
|Q               |
|                  |
|                  |
|                  |
|               Q|
 -------------- ''','''
 --------------
|K                |
|                  |
|                  |
|                  |
|               K|
 -------------'''  
]

BLANKCARD = '''
 --------------
|XXXXXXX|
|XXXXXXX|
|XXXXXXX|
|XXXXXXX|
|XXXXXXX|
 -------------- '''

def displayCards(cards_numbers):
  for j in range(0, len(cards_numbers)) :
    print(cards_gui[cards_numbers[j]], end =" ")
  print("")

#Create a function to pick a random 
def deal_card():
  cards_numbers = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]  # J = Q = K = 10, and the ace will take the value of 11 or 1 (depending on the user)
  card = random.choice(cards_numbers)
  return card

#Create a function called calculate_score() that takes a List of cards as input and returns the score. 
def calculate_score(cards_numbers):
  
  #print("the cards before ace is", cards)                # statement for debugging "ACE LOGIC"
  #print("the sum of the cards is:", sum(cards))    # statement for debugging "ACE LOGIC"
  
  # Inside calculate_score() check for a blackjack (a hand with only 2 cards) and return 0 instead of the actual score.
  if sum(cards_numbers) == 21 and len(cards_numbers) == 2:
    return 0        #0 will represent a blackjack in our game.

  # Inside calculate_score() check for an 11 (ace). If the score is between 10 and 21, remove the 11 and replace it with a 1.
  if 11 in cards_numbers and sum(cards_numbers) > 10 and sum(cards_numbers) < 21:
    cards_numbers.remove(11)
    cards_numbers.append(1)   #append always adds at the end of the list

  return sum(cards_numbers)


# Create a function called compare() and pass in the user_score and computer_score.
def compare(user_score, computer_score):
  if user_score > 21 and computer_score > 21:    #If you and the computer are both over, you lose.
    return "You went over. You lose 😤"
  if user_score == computer_score:
    return "Draw 🙃"
  elif computer_score == 0:
    return "Lose, Computer has Blackjack 😱"
  elif user_score == 0:
    return "Win with a Blackjack 😎"
  elif user_score > 21:
    return "You went over. 'BUST'.You lose 😭"
  elif computer_score > 21:
    return "Computer went over. You win 😁"
  elif user_score > computer_score:
    return "You win 😃"
  else:
    return "You lose 😤"

def play_game():
  # Deal the user and computer 2 cards each using deal_card()
  user_cards = []
  computer_cards = []
  is_game_over = False

  for _ in range(2):
    #print computer and user cards here
    user_cards.append(deal_card())
    computer_cards.append(deal_card())

  # The score will need to be rechecked with every new card drawn and needs to be repeated until the game ends.
  while not is_game_over:
    #Call calculate_score(). If the computer or the user has a blackjack (0) or if the user's score is over 21, then the game ends.
    #print("calculating for user cards")                    # statement for debugging "ACE"
    user_score = calculate_score(user_cards)   
    
    #print("calculating for computer cards")          # statement for debugging "ACE"
    computer_score = calculate_score(computer_cards)
    
    print(f"   Your cards: {user_cards}, current score: {user_score}")
    displayCards(user_cards)

    print(f"   Computer's first card: {computer_cards[0]}")
    print(f'{cards_gui[computer_cards[0]]}  {BLANKCARD}')
    
    #if the user or computer has blackjack(0) or if the user score is more than 21 then game ends
    if user_score == 0 or computer_score == 0 or user_score > 21:
      is_game_over = True
    else:
      # If the game has not ended, ask the user if they want to draw another card.
      user_should_deal = input("Type 'y' to get another card, type 'n' to pass: ")
      if user_should_deal == "y":
        #num = deal_card() 
        #if num == 11 and sum(cards) > 10 and sum(cards) < 21: #this program is to make only the third ace as 1 and not the second card
            #num = 1
        user_cards.append(deal_card())
      else:
        is_game_over = True

  # Once the user is done, it's time to let the computer play. The computer should keep drawing cards as long as it has a score less than 17.
  while computer_score != 0 and computer_score < 17:
    #num2 = deal_card()
    #if num2 == 11 and sum(cards) > 10 and sum(cards) < 21: #this program is to make only the third ace as 1 and not the second card
        #num2 = 2
    computer_cards.append(deal_card())
    computer_score = calculate_score(computer_cards)

  print(f"   Your final hand: {user_cards}, final score: {user_score}")
  print(f"   Computer's final hand: {computer_cards}, final score: {computer_score}")
  print(compare(user_score, computer_score))


# Ask the user if they want to restart the game, this is the first statement that gets triggered
while input("Do you want to play a game of Blackjack? Type 'y' or 'n': ") == "y":
  play_game()
  
